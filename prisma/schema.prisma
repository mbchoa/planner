datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Account {
    id                String  @id @default(cuid())
    userId            String  @map("user_id")
    type              String
    provider          String
    providerAccountId String  @map("provider_account_id")
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@map("accounts")
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique @map("session_token")
    userId       String   @map("user_id")
    expires      DateTime

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map("sessions")
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime? @map("email_verified")
    image         String?

    accounts  Account[]
    sessions  Session[]
    taskLists TaskList[]
    tasks     Task[]

    @@map("users")
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
    @@map("verificationtokens")
}

model TaskList {
    id     String @id @default(cuid()) @map("task_list_id")
    name   String
    userId String @map("user_id")

    user  User   @relation(fields: [userId], references: [id])
    tasks Task[]

    @@index([userId])
    @@map("task_lists")
}

model Task {
    id          String    @id @default(cuid()) @map("task_id")
    userId      String    @map("user_id")
    taskListId  String    @map("task_list_id")
    description String
    completed   Boolean   @default(false)
    createdAt   DateTime  @map("created_at")
    completedAt DateTime? @map("compelted_at")

    user     User     @relation(fields: [userId], references: [id])
    taskList TaskList @relation(fields: [taskListId], references: [id])

    @@index([taskListId])
    @@map("tasks")
}
